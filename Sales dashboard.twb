<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='SalesDashboard_17103281082070' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='modern' />
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sales_data_df' inline='true' name='federated.0twcbfs0onzq011g2kewd1mcobz8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sales_data_df' name='textscan.1cpao6r1vp6jeq1enlv3t1kzgspf'>
            <connection class='textscan' directory='C:/Users/HP/Downloads' filename='Sales_data_df.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1cpao6r1vp6jeq1enlv3t1kzgspf' name='Sales_data_df.csv' table='[Sales_data_df#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='real' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Year' ordinal='18' />
            <column datatype='real' name='Discount %' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='integer' name='Quantity' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1cpao6r1vp6jeq1enlv3t1kzgspf' name='Sales_data_df.csv' table='[Sales_data_df#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='real' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Year' ordinal='18' />
            <column datatype='real' name='Discount %' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='integer' name='Quantity' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sales_data_df.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Sales_data_df.csv]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Sales_data_df.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Sales_data_df.csv]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Sales_data_df.csv]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Sales_data_df.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Sales_data_df.csv]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Sales_data_df.csv]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Sales_data_df.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sales_data_df.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Sales_data_df.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sales_data_df.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Sales_data_df.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sales_data_df.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Sales_data_df.csv]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Sales_data_df.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Sales_data_df.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Sales_data_df.csv]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Sales_data_df.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sales_data_df.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount %]</local-name>
            <parent-name>[Sales_data_df.csv]</parent-name>
            <remote-alias>Discount %</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Sales_data_df.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Sales_data_df.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='On-Time Status' datatype='string' name='[Calculation_898186715503067137]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Ship Date] &gt;= [Order Date] THEN &quot;On Time&quot;&#13;&#10;ELSE &quot;Late&quot;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Discount %]' role='measure' type='quantitative' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='real' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sales_data_df.csv' datatype='table' name='[__tableau_internal_object_id__].[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]' role='measure' type='quantitative' />
      <column-instance column='[Discount %]' derivation='Avg' name='[avg:Discount %:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Day' name='[dy:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Discount %]' derivation='Median' name='[med:Discount %:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_898186715503067137]' derivation='None' name='[none:Calculation_898186715503067137:nk]' pivot='key' type='nominal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Discount %]' derivation='Sum' name='[sum:Discount %:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/HP/Desktop/Sales_data_df.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/13/2024 11:07:36 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Sales_data_df' increment-value='%null%' refresh-type='create' rows-inserted='9789' timestamp-start='2024-03-13 11:07:33.693' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Sales_data_df.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9789</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>1</ordinal>
              <family>Sales_data_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3176</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sales_data_df.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1385</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>3</ordinal>
              <family>Sales_data_df.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1457</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>4</ordinal>
              <family>Sales_data_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>5</ordinal>
              <family>Sales_data_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1184</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>6</ordinal>
              <family>Sales_data_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1184</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>7</ordinal>
              <family>Sales_data_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>8</ordinal>
              <family>Sales_data_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>9</ordinal>
              <family>Sales_data_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>581</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>10</ordinal>
              <family>Sales_data_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>11</ordinal>
              <family>Sales_data_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>687</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>12</ordinal>
              <family>Sales_data_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>13</ordinal>
              <family>Sales_data_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2055</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>14</ordinal>
              <family>Sales_data_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>15</ordinal>
              <family>Sales_data_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>16</ordinal>
              <family>Sales_data_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2034</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>17</ordinal>
              <family>Sales_data_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3280</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>18</ordinal>
              <family>Sales_data_df.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount %</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount %]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount %</remote-alias>
              <ordinal>19</ordinal>
              <family>Sales_data_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>20</ordinal>
              <family>Sales_data_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3280</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>21</ordinal>
              <family>Sales_data_df.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Order Date:ok]' palette='purple_10_0' type='palette'>
            <map to='#7c4d79'>
              <bucket>2018</bucket>
            </map>
            <map to='#a5729b'>
              <bucket>2017</bucket>
            </map>
            <map to='#cd9bbc'>
              <bucket>2016</bucket>
            </map>
            <map to='#eec9e5'>
              <bucket>2015</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[dy:Order Date:ok]' palette='purple_10_0' type='palette'>
            <map to='#7c4d79'>
              <bucket>2018</bucket>
            </map>
            <map to='#a5729b'>
              <bucket>2017</bucket>
            </map>
            <map to='#cd9bbc'>
              <bucket>2016</bucket>
            </map>
            <map to='#eec9e5'>
              <bucket>2015</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[qr:Order Date:ok]' palette='purple_10_0' type='palette'>
            <map to='#7c4d79'>
              <bucket>2018</bucket>
            </map>
            <map to='#a5729b'>
              <bucket>2017</bucket>
            </map>
            <map to='#cd9bbc'>
              <bucket>2016</bucket>
            </map>
            <map to='#eec9e5'>
              <bucket>2015</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' palette='purple_10_0' type='palette'>
            <map to='#7c4d79'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#bc86a9'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
            <map to='#eec9e5'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' palette='purple_10_0' type='palette'>
            <map to='#7c4d79'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#a5729b'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#cd9bbc'>
              <bucket>&quot;East&quot;</bucket>
            </map>
            <map to='#eec9e5'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Segment:nk]' palette='purple_10_0' type='palette'>
            <map to='#7c4d79'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map>
            <map to='#bc86a9'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map>
            <map to='#eec9e5'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Ship Mode:nk]' palette='purple_10_0' type='palette'>
            <map to='#7c4d79'>
              <bucket>&quot;Standard Class&quot;</bucket>
            </map>
            <map to='#a5729b'>
              <bucket>&quot;Second Class&quot;</bucket>
            </map>
            <map to='#cd9bbc'>
              <bucket>&quot;Same Day&quot;</bucket>
            </map>
            <map to='#eec9e5'>
              <bucket>&quot;First Class&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_898186715503067137:nk]' palette='purple_10_0' type='palette'>
            <map to='#7c4d79'>
              <bucket>&quot;On Time&quot;</bucket>
            </map>
            <map to='#eec9e5'>
              <bucket>&quot;Late&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='purple_10_0' type='palette'>
            <map to='#4b2e4a'>
              <bucket>&quot;[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#7c4d79'>
              <bucket>&quot;[federated.0twcbfs0onzq011g2kewd1mcobz8].[avg:Discount \%:qk]&quot;</bucket>
            </map>
            <map to='#7c4d79'>
              <bucket>&quot;[federated.0twcbfs0onzq011g2kewd1mcobz8].[med:Discount \%:qk]&quot;</bucket>
            </map>
            <map to='#7c4d79'>
              <bucket>&quot;[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Discount \%:qk]&quot;</bucket>
            </map>
            <map to='#93788d'>
              <bucket>&quot;[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#bc86a9'>
              <bucket>&quot;[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Quantity:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sales_data_df.csv' id='Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225'>
            <properties context=''>
              <relation connection='textscan.1cpao6r1vp6jeq1enlv3t1kzgspf' name='Sales_data_df.csv' table='[Sales_data_df#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='real' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Year' ordinal='18' />
                  <column datatype='real' name='Discount %' ordinal='19' />
                  <column datatype='real' name='Discount' ordinal='20' />
                  <column datatype='integer' name='Quantity' ordinal='21' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Customer detail'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales_data_df' name='federated.0twcbfs0onzq011g2kewd1mcobz8' />
          </datasources>
          <datasource-dependencies datasource='federated.0twcbfs0onzq011g2kewd1mcobz8'>
            <column caption='On-Time Status' datatype='string' name='[Calculation_898186715503067137]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Ship Date] &gt;= [Order Date] THEN &quot;On Time&quot;&#13;&#10;ELSE &quot;Late&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_898186715503067137]' derivation='None' name='[none:Calculation_898186715503067137:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order ID]' derivation='None' name='[none:Order ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Date]' derivation='None' name='[none:Ship Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Category:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Category:nk]' />
              <groupfilter function='member' level='[none:Category:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Order Date:qk]' included-values='in-range'>
            <min>#2015-01-02#</min>
            <max>#2018-12-30#</max>
          </filter>
          <filter class='categorical' column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Sub-Category:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Order Date:qk]</column>
            <column>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Category:nk]</column>
            <column>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Sub-Category:nk]</column>
            <column>[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Order ID:nk]' value='208' />
            <format attr='width' field='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Calculation_898186715503067137:nk]' value='180' />
            <format attr='width' field='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Order Date:ok]' value='120' />
            <format attr='width' field='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Ship Date:ok]' value='172' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <lod column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]' />
              <lod column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Ship Mode:nk]' />
              <lod column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:City:nk]' />
              <lod column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Segment:nk]' />
              <lod column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Category:nk]' />
              <lod column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Region:nk]' />
              <color column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Sales:qk]' />
              <text column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Order ID:nk] / ([federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Order Date:ok] / ([federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Ship Date:ok] / [federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Calculation_898186715503067137:nk])))</rows>
        <cols />
      </table>
      <simple-id uuid='{DA7F17D9-3256-450D-8889-15F10FE20C2A}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales_data_df' name='federated.0twcbfs0onzq011g2kewd1mcobz8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0twcbfs0onzq011g2kewd1mcobz8'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0twcbfs0onzq011g2kewd1mcobz8].[Latitude (generated)]</column>
            <column>[federated.0twcbfs0onzq011g2kewd1mcobz8].[Longitude (generated)]</column>
            <column>[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0twcbfs0onzq011g2kewd1mcobz8].[Longitude (generated)]' field-type='quantitative' max='-7216876.350507196' min='-14404836.542129349' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0twcbfs0onzq011g2kewd1mcobz8].[Latitude (generated)]' field-type='quantitative' max='6570705.8024591515' min='2317027.5238425042' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Sales:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:City:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:City:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:City:nk]' value='false' />
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Sales:qk]' />
              <lod column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Country:nk]' />
              <lod column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:City:nk]' />
              <geometry column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0twcbfs0onzq011g2kewd1mcobz8].[Latitude (generated)]</rows>
        <cols>[federated.0twcbfs0onzq011g2kewd1mcobz8].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{BEF7C033-9BA6-4A08-AAC9-A2CA83284A0B}' />
    </worksheet>
    <worksheet name='Sales by Category and Sub-Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales_data_df' name='federated.0twcbfs0onzq011g2kewd1mcobz8' />
          </datasources>
          <datasource-dependencies datasource='federated.0twcbfs0onzq011g2kewd1mcobz8'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='rows' value='#b4b4b4' />
            <format attr='div-level' scope='rows' value='10' />
            <format attr='div-level' scope='cols' value='10' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Category:nk]' />
              <lod column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Sales:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Discount:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Sales:qk]' z-order='2' />
            <reference-line axis-column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Discount:qk]' enable-instant-analytics='true' fill-above='true' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Sales:qk]' z-order='1'>
              <reference-line-value percentage='60' />
              <reference-line-value percentage='80' />
            </reference-line>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-color' value='#b07aa1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Category:nk] / [federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Sub-Category:nk])</rows>
        <cols>[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Discount:qk]</cols>
      </table>
      <simple-id uuid='{309AABC2-A038-4533-9C19-D5CDFA635810}' />
    </worksheet>
    <worksheet name='Sales by region'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales_data_df' name='federated.0twcbfs0onzq011g2kewd1mcobz8' />
          </datasources>
          <datasource-dependencies datasource='federated.0twcbfs0onzq011g2kewd1mcobz8'>
            <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer ID]' derivation='None' name='[none:Customer ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Discount:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Region:nk]' />
              <lod column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Customer ID:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Sales:qk]</rows>
        <cols>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{DDE0E960-540A-415E-893A-5B5F4879C74F}' />
    </worksheet>
    <worksheet name='Segments'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales_data_df' name='federated.0twcbfs0onzq011g2kewd1mcobz8' />
          </datasources>
          <datasource-dependencies datasource='federated.0twcbfs0onzq011g2kewd1mcobz8'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Segment:nk]' />
              <wedge-size column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Sales:qk]' />
              <size column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Sales:qk]' />
              <text column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Segment:nk]' />
              <text column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A3D66872-9CB2-420D-9CA5-A7E92DD32988}' />
    </worksheet>
    <worksheet name='Ship Mode'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales_data_df' name='federated.0twcbfs0onzq011g2kewd1mcobz8' />
          </datasources>
          <datasource-dependencies datasource='federated.0twcbfs0onzq011g2kewd1mcobz8'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='Sales_data_df.csv' datatype='integer' name='[__tableau_internal_object_id__].[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Sales_data_df.csv' datatype='table' name='[__tableau_internal_object_id__].[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Ship Mode:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0twcbfs0onzq011g2kewd1mcobz8].[__tableau_internal_object_id__].[cnt:Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Ship Mode:nk]' value='92' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0twcbfs0onzq011g2kewd1mcobz8].[__tableau_internal_object_id__].[cnt:Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Ship Mode:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Ship Mode:nk]</rows>
        <cols>[federated.0twcbfs0onzq011g2kewd1mcobz8].[__tableau_internal_object_id__].[cnt:Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225:qk]</cols>
      </table>
      <simple-id uuid='{73775390-FE56-478F-B211-6D4849691DFF}' />
    </worksheet>
    <worksheet name='Shipment delivery Status'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales_data_df' name='federated.0twcbfs0onzq011g2kewd1mcobz8' />
          </datasources>
          <datasource-dependencies datasource='federated.0twcbfs0onzq011g2kewd1mcobz8'>
            <column caption='On-Time Status' datatype='string' name='[Calculation_898186715503067137]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Ship Date] &gt;= [Order Date] THEN &quot;On Time&quot;&#13;&#10;ELSE &quot;Late&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='Sales_data_df.csv' datatype='integer' name='[__tableau_internal_object_id__].[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]' role='measure' type='quantitative' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.true...column caption='Sales_data_df.csv' datatype='table' name='[__tableau_internal_object_id__].[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_898186715503067137]' derivation='None' name='[none:Calculation_898186715503067137:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer ID]' derivation='None' name='[none:Customer ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Calculation_898186715503067137:nk]' value='21' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Calculation_898186715503067137:nk]' />
              <lod column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Customer ID:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0twcbfs0onzq011g2kewd1mcobz8].[__tableau_internal_object_id__].[cnt:Sales_data_df.csv_10B6615903D94595A78F5BE63BFF6225:qk]</rows>
        <cols>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Calculation_898186715503067137:nk]</cols>
      </table>
      <simple-id uuid='{97D5F089-2D4F-4106-8AF6-E7FDE4EB67AE}' />
    </worksheet>
    <worksheet name='Top 10 City with Highest Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales_data_df' name='federated.0twcbfs0onzq011g2kewd1mcobz8' />
          </datasources>
          <datasource-dependencies datasource='federated.0twcbfs0onzq011g2kewd1mcobz8'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:City:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:City:nk]</column>
            <column>[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Sales:qk]' value='68' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Sales:qk]' num-steps='5' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dotted' />
            <format attr='stroke-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='hillshade_highlight_bright' value='true' />
            <format attr='enabled' id='hillshade_highlight_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_faint' value='true' />
            <format attr='enabled' id='hillshade_shadow_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_dark' value='true' />
            <format attr='enabled' id='hillshade_shadow_extreme' value='true' />
            <format attr='enabled' id='Coastline' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Sales:qk]</rows>
        <cols>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{AAA6100C-D1C7-4E7D-BA2B-2169765C3D48}' />
    </worksheet>
    <worksheet name='Total Sales Per Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales_data_df' name='federated.0twcbfs0onzq011g2kewd1mcobz8' />
          </datasources>
          <datasource-dependencies datasource='federated.0twcbfs0onzq011g2kewd1mcobz8'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Sales:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Sales:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Sales:qk]</rows>
        <cols>[federated.0twcbfs0onzq011g2kewd1mcobz8].[qr:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{4214E490-989D-4DE1-BC90-9A6BFDF88892}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='SALES DASHBOARD'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#c0c0c0' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#00000000' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Sales_data_df' name='federated.0twcbfs0onzq011g2kewd1mcobz8' />
      </datasources>
      <datasource-dependencies datasource='federated.0twcbfs0onzq011g2kewd1mcobz8'>
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97790' id='7' param='vert' type-v2='layout-flow' w='98984' x='508' y='1105'>
            <zone fixed-size='67' h='10359' id='8' is-fixed='true' type-v2='title' w='98984' x='508' y='1105'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='87431' id='5' type-v2='layout-basic' w='98984' x='508' y='11464' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='87910' id='3' name='Map' w='31324' x='294' y='11791' />
        <zone h='35821' id='9' name='Top 10 City with Highest Sales' w='47184' x='32104' y='63582' />
        <zone h='5525' id='10' mode='slider' name='Top 10 City with Highest Sales' param='[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]' type-v2='filter' w='11519' x='86753' y='3729' />
        <zone h='36326' id='11' name='Segments' w='19949' x='79606' y='63260' />
        <zone h='24862' id='12' name='Ship Mode' w='33482' x='66201' y='11740' />
        <zone h='24776' id='13' name='Sales by region' w='33722' x='32104' y='11940' />
        <zone h='25691' id='14' name='Shipment delivery Status' w='33477' x='66235' y='37293' />
        <zone h='25672' id='15' name='Total Sales Per Year' w='33722' x='32168' y='37164' />
      </zones>
      <devicelayouts>
        <devicelayout name='Desktop'>
          <size sizing-mode='automatic' />
          <zones>
            <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98518' id='7' param='vert' type-v2='layout-flow' w='99166' x='417' y='741'>
                <zone fixed-size='66' h='6852' id='8' is-fixed='true' type-v2='title' w='99166' x='417' y='741'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='91666' id='5' type-v2='layout-basic' w='99166' x='417' y='7593' />
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
            <zone h='87910' id='3' name='Map' w='31521' x='324' y='11791' />
            <zone h='35821' id='9' name='Top 10 City with Highest Sales' w='47184' x='32104' y='63582' />
            <zone h='5521' id='10' mode='slider' name='Top 10 City with Highest Sales' param='[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]' type-v2='filter' w='11574' x='86667' y='5000' />
            <zone h='36326' id='11' name='Segments' w='19949' x='79606' y='63260' />
            <zone h='24862' id='12' name='Ship Mode' w='33482' x='66201' y='11740' />
            <zone h='24776' id='13' name='Sales by region' w='33722' x='32104' y='11940' />
            <zone h='25691' id='14' name='Shipment delivery Status' w='33477' x='66235' y='37293' />
            <zone h='25672' id='15' name='Total Sales Per Year' w='33722' x='32168' y='37164' />
          </zones>
        </devicelayout>
        <devicelayout name='Tablet'>
          <size sizing-mode='automatic' />
          <zones>
            <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97516' id='7' param='vert' type-v2='layout-flow' w='98438' x='781' y='1242'>
                <zone fixed-size='60' h='10559' id='8' is-fixed='true' type-v2='title' w='98438' x='781' y='1242'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='86957' id='5' type-v2='layout-basic' w='98438' x='781' y='11801' />
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
            <zone h='87910' id='3' name='Map' w='31521' x='324' y='11791' />
            <zone h='35821' id='9' name='Top 10 City with Highest Sales' w='47184' x='32104' y='63582' />
            <zone h='5590' id='10' mode='slider' name='Top 10 City with Highest Sales' param='[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]' type-v2='filter' w='11523' x='84082' y='4348' />
            <zone h='36326' id='11' name='Segments' w='19949' x='79606' y='63260' />
            <zone h='24862' id='12' name='Ship Mode' w='33482' x='66201' y='11740' />
            <zone h='24776' id='13' name='Sales by region' w='33722' x='32104' y='11940' />
            <zone h='25691' id='14' name='Shipment delivery Status' w='33477' x='66235' y='37293' />
            <zone h='25672' id='15' name='Total Sales Per Year' w='33722' x='32168' y='37164' />
          </zones>
        </devicelayout>
        <devicelayout name='Phone'>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='99136' id='18' param='vert' type-v2='layout-flow' w='95734' x='2133' y='432'>
                <zone fixed-size='60' h='1891' id='8' type-v2='title' w='95734' x='2133' y='432'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3837' id='10' mode='slider' name='Top 10 City with Highest Sales' param='[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]' type-v2='filter' w='95734' x='2133' y='2323'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='199' h='11189' id='12' is-fixed='true' name='Ship Mode' w='95734' x='2133' y='6160'>
                  <layout-cache type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='15567' id='3' is-fixed='true' name='Map' w='95734' x='2133' y='17349'>
                  <layout-cache minheight='225' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='198' h='11135' id='13' is-fixed='true' name='Sales by region' w='95734' x='2133' y='32916'>
                  <layout-cache minheight='164' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='206' h='11567' id='15' is-fixed='true' name='Total Sales Per Year' w='95734' x='2133' y='44051'>
                  <layout-cache minheight='163' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='206' h='11567' id='14' is-fixed='true' name='Shipment delivery Status' w='95734' x='2133' y='55618'>
                  <layout-cache minheight='165' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='15567' id='11' is-fixed='true' name='Segments' w='95734' x='2133' y='67185'>
                  <layout-cache type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='15567' id='9' is-fixed='true' name='Top 10 City with Highest Sales' w='95734' x='2133' y='82752'>
                  <layout-cache minheight='224' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{59E69C41-E4E2-401B-BD4B-71C917D309B4}' />
    </dashboard>
  </dashboards>
  <windows show-side-pane='false' source-height='30'>
    <window class='worksheet' name='Total Sales Per Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{CCC8B4B7-B8E3-4922-8EAC-37F79DF7F9C8}' />
    </window>
    <window class='worksheet' name='Top 10 City with Highest Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.0twcbfs0onzq011g2kewd1mcobz8].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:City:nk]</field>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{976D7929-3CA5-4EFC-979D-D1C6933B36DF}' />
    </window>
    <window class='worksheet' name='Segments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Segment:nk]</field>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{B3B07F5F-8D82-48BE-B297-8EE7F0471A3E}' />
    </window>
    <window class='worksheet' name='Ship Mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Ship Mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Ship Mode:nk]</field>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{DBE6BBFE-EE3D-4B06-BAD1-AD48901C237A}' />
    </window>
    <window class='worksheet' name='Sales by Category and Sub-Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[:Measure Names]</field>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Category:nk]</field>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Sub-Category:nk]</field>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C215CE6C-E5C2-4C99-97C8-63365C6FA34D}' />
    </window>
    <window class='worksheet' name='Customer detail'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Calculation_898186715503067137:nk]</field>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Category:nk]</field>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:City:nk]</field>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Order Date:ok]</field>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Order Date:qk]</field>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Order ID:nk]</field>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Region:nk]</field>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Segment:nk]</field>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Ship Date:ok]</field>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Ship Mode:nk]</field>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Sub-Category:nk]</field>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]</field>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{64882CBE-EA5B-4CE6-8D6E-B2ADF5774E06}' />
    </window>
    <window class='worksheet' name='Sales by region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='3' param='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[:Measure Names]</field>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Customer ID:nk]</field>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Region:nk]</field>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{048986C9-53E6-4803-8820-DC111CF39455}' />
    </window>
    <window class='worksheet' name='Shipment delivery Status'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Calculation_898186715503067137:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Calculation_898186715503067137:nk]</field>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Customer ID:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{68674265-B3E4-43E6-AEB7-A6371F001B07}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[none:Country:nk]</field>
            <field>[federated.0twcbfs0onzq011g2kewd1mcobz8].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{32B18679-FC82-45B1-B1C2-76CD96B4C557}' />
    </window>
    <window class='dashboard' maximized='true' name='SALES DASHBOARD'>
      <viewpoints>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by region'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Segments'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Ship Mode'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Shipment delivery Status'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 City with Highest Sales'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Sales Per Year'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='4' />
      <device-preview>
        <device is-portrait='false' type='Desktop' />
      </device-preview>
      <simple-id uuid='{D90C7F43-8F6E-426F-A100-50EDBAC5758E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Customer detail' width='192'>
      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
      8gL9f5V+QjI/vGsyAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SALES DASHBOARD' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales by Category and Sub-Category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales by region' width='192'>
      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
      vZ4QgH8CS5ZR60Go7J0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Segments' width='192'>
      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
      GAAp7b/raFv4O+XOAgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='143' name='Ship Mode' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Shipment delivery Status' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 City with Highest Sales' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAASOElEQVR4nO3d6XMb933H8ffiIADiJkESvCmKIkWJci3ZluJDtmNbcSa2k0kd5+y0nbZp
      OtPJg/4Hnj5un/RJO53OpJ5JpkkT53BSpz7qQ7asmyJFkeINkiIJEiAJkARAYIHd7QPVcuSr
      MgiSgPf7esID2t3vaPeDH367P/5+imEYBkKYlA0gGo2SzWb3uhYhdp0NIJvNkslk9roWIXad
      Za8LEGIvSQCEqUkAhKlJAISpSQCEqUkAhKlJAISpSQCEqUkAhKlJAISpSQCEqdmK2SgZneW9
      /qt0HOhmemqWrs5mJmbiNAbdNIb9FKrqaQ8HSl2rECVXVAsQCLfR0xJk4OwVslqB8fExbNks
      /SNXePnMEK0NfjRNQ9O0UtcrREkVFYB4ZIjT1xY5dKgddTOFN1BDPJujtaGdL504yODkAvl8
      nkKhUOp6hSgpxTAMIxKJyHBoYUrSCRamJgEQpiYBEKYmARCmJgEQpiYBEKYmARCmJgEQpiYB
      EKZW9GC4M+cv0H7P40TOvEJr736ujS9R53PS1BjAV98tg+FERShyMFwrTQ0h1qf6Gbw+y/j0
      HLVVVcxGZ7g0Mk9jnZ+trS2ZblGUvaJagHhkmOmVLA888BA1ngD2gJvhySh3995NV1cz45EF
      DnU2oShKqesVoqRkMJwwNekEC1OTAAhTkwAIU5MACFOTAAhTkwAIU5MACFOTAAhTKyoAhqGT
      zebQdY1cTkXXdVT15jQohqGjaXqp6xRiRxQ1FGJjeZ7z58+Q83airkawu90sx9N4XRbCDUG6
      ek/QUu8rda1ClFxRLYCnJoSvvo0Hjx6gqb2TgEOh0e8jnd0kntjC7XGRyWTY2toqdb1ClFRx
      w6FjiyQ2t4hMTrCxmeNwzxEiC6v0HOqiuaWB5bU19rU0lLpWIUpOBsMJU5O7QMLUJADC1CQA
      wtQkAMLUJADC1CQAwtQkAMLUJADC1Ip6ErwZX+Bs/zW6Dh5gYvwGR3rbGJ5aIhz0EK73kVX8
      tDbIxFii/BXVAlQH6jnQ6OHc6UvYHRqvvnuefDLJuStn+fWbl2iq85e6TiF2RFEBWLtxnVcv
      R+jpChGJLLO/pZ7FjRQhXwOP3r2PwckFGQwnKoKMBRKmJp1gYWoSAGFqEgBhahIAYWoSAGFq
      EgBhahIAYWoSAGFqEgBhakUNhtMLOX720u95/Ggnr16Y4MjBDsZm4jQEqmkK+6nyt8sqkaIi
      FBUADCjoWTZWE+SyGSamI3gtHsYio0wu1vJn37oLVVVRFAW73V7ikoX4eIauMThwhVDQy+Dw
      JJ1dncSTGR48cQ8Wo8Dg4AhOJUdSd+NVNrD4W4v7CGSxO2gNh3F5/QQDQfZ1tJMCDu47yNOP
      HGVkegGLxSKrRIpdlc9luDY4RH3rAbxeD+3NjURnJsgWdKZGrjB0fYb2rh7WY3PMLicYHRoo
      sgUAHn3oUQD+uOduAO45+sFrMiec2AtVLi81Pg9aOorF00p88QaqprMcWyKbK5BYmufll17E
      3XwENT6Kxdcmo0HF59/qSpxgbR2Wj/lAUnQLIMRe2ExuoqrqZ9zKQiK++rGvSABERXnx337B
      9f7rJdufPAcQpiYBEKYmARCmJgEQpiYBEKZWdABiKyto+SzDw9fZSm8wNjlDPBZDVTOsJjZL
      WaMQO6ao26BadoMf/fRnfPVYL1fjGebnJ9lMQSaXpLrax5NffqrUdQqxI4oKgNXpY19LHYV8
      lmoLLCW3cFkcKIZCjd/F6kYGq25DURRcLlepaxaiZIp+EPbYyccI+jw4IvO0tYZZWE4S8Lrw
      B3xsbGSorq4uZZ1C7IiiAxCqDQHQ3d0FwP4Oz63XaoIyN6ioDHIXSJiaBECYmgRAmJoEQJia
      BECYmgRAmJoEQJiaBECY2kcCkJgZ4T9e/CWnzw9/8laGzsDQEGAwMXyNWGyBd871Mz42TnJt
      iYVYcgdLFqJ0PvIk2GJ3YKuy43M5PnEjLZfhnYsX2B8OcPrNszT3NFFIK4yPR7E6gnzvG1/f
      0aKFKJWPtACbsRjrm3lWYvFP3Mjq9NBQ4yW1kULNpijoEE1u4HZ4OdrdyPBMVFaJFBXhQy2A
      QU17B65rUzR2dnzqhs8+8yxWq5Uf/F03KAoFTcNqsWCxWNB1HavVunNVC1EiH2oBVN59620W
      FuaZmJr71A3fv8AtVisWi4Uqux2r1YqiKHLxi4rxoQA4uKtnH4H6Wj52Gi0hPmc+9BGowHym
      io5QgGBDzd5UJMQu+lALkGd2ZABHqI316Cd3goX4vPhQC+Di6W9/B5vNRqGwNwUJsZs+8hzA
      4XACIP1YYQYyFEKYmgRAmFrRAViKxcil1rg8MMxWep3h0SmWl5bI5dLE1zZKWaMQO6boibFe
      +M+f89ff/AZkovzy9yO4LC4uba3hrPbx9FPPlLpOIXZEUS3A+xNj6eoGK6qbznoPaqGARbHS
      UONhOZGSsUCiIhQ9L9ATjzyBUsjRFCrQ3n6YpmQan9uJz+9hI5WVibFERSg6ADXBm0+Kg3WN
      APi8vluvBf2yNrCoDHIXSJiaBECYmgRAmJoEQJiaBECYmgRAmJoEQJiaBECYWnEPwgydSwOD
      HOps5PxAhMM9LVyfXqYh6KG+3seWVk1zfaDEpQpResUNhstlODdwBUdyCU2p4vdvv0etw8fk
      5ACKo4Y/fU4mxhKVocjBcB7qgx58tR6mI1Fa6gIsJJJ4nH6OH2xmaGpRBsOJilD0WKDnvvYc
      AH/V9yCKovBFw0BRPphK5Q+/F6JcFR2A9y/wD38VopLIXSBhahIAYWoSAGFqEgBhahIAYWoS
      AGFqEgBhahIAYWpFPwgDWL0xwusXp7irt53RSIxwwE1T2A/VTbSHZTCcKH/bagGS8Tjr62tc
      H5vAmS8wND7Ea+ev09Lgp1AoUJA51kWZ21YAbFVugr4A4XCYRKFAZ8t+vvxAH0OTC+i6jmEY
      papTiB2xrY9A7X330t53LwAP/MHvW7azUyF2kXSChalJAISpSQCEqW2rDyB232Z8nksjc7Q0
      +Iin4Av3HGb0ynlUVx2kolj9LVjSSxieJvoOtO11uWVPWoAKc+HiJdLpdby1DcxOXEczYGxi
      mkuXzjG/sEAqtUr/xSHWk7JKz52QAFSYumCA+MoyYxOTqIZGPLZCW3M9Xl+QcCjMzEwUb8DF
      wsLiXpdaERTDMIxIJEImk9nrWkQRVlbihEJ1e13Grvn3f/gR1/uvl2x/0gcoM+urSQoF7Y7/
      vYKF1eXVoo7l8XlwuBxFbft5sa0A6AWV2RtRmhpDLK9s4nM7cHtcbGV1fF5ZIqkYL/zjCyzM
      LOzKsb79t9/h6INHd+VY5WpbAZi8fJaLi+s0TFqIJwoUtDQ+n5+HHzlVqvqE2FHb6gRnUht4
      7VbmVlI47TZ0TcNhs5DJazIxlqgI22oBjpx8HGN4kie625ieWyEU8FBbF2QtkaI6WFuqGoXY
      MdsKgLWqmqNH7wKgr/eD8f8NdebuWInKUZZ3gRKJBKnkCinNTm9XB6tL8xjOALn1ZVw1Tajr
      cTyhRjxOWY5VbE/ZPQhbj83y45+/jNvrYnxsGijw9msvc/rMGbI5gzde/y8unD/D6fODe12q
      +BwouwCMjY6TTq8Tm53jrgcfRM9nsXhbMPJZUskox79wP/YqJ7omf21WLlaWo2zlNRbn59GA
      mfEhXn/rDFv5AvOLUZbnJhmbKc8n02UXgOMPn+Iv/uQ56vYdpN1fxeT0Ivce6eT48RNs5RU2
      0xo93d08dMLc96/LRSG7wa9+8SuisQV+8tPfogLtXT1UWWAjdoP/Pn0aDZ1LFy5Qjn8fWJZ9
      gPq6Dx7td/d03/q+tSm8B9XovPTibzhwqJPxiRkee/IZqpU0L718lqdOHePVtwdpCdoZj+V4
      7qunMNsk2Yn4ErmCyuDVMRSyLMcS+NQV/E37aGhuwue8iKoaODFQdXCU2VvurgfgX/7+n0lv
      pnflWN/8m2/Rur91W/uYHb7I5dEI9z3xOKFYEqtF4d3/eYO5GwnefGON+Sgc7enD2dxouosf
      oK61m7/8fjM2h4vcyfvJJlex1LTSa795g+LJx57EahQ4+cTjZXfxwx4EIB6Nk1pP7cqx1Jy6
      7X2EOw/zxfszTA2cYz3vJL5wg74TD6NZhzh270Gc/ZOkVY22tpoSVFyZXNVuAOweDx6P57bX
      /D4/AJ6PbFUeyvIjUDlxuDw8+tgXb/2cSaVwuj08duphAB55vH6vStsVv3nhN1x888KuHOv+
      Lz3AU999aleO9b5tBsBgbmoKb9DH+MzNVSJDIR+bWSuNdZUxMdbY4BjJlcSuHKu1q42m9qZd
      OVapaAWNvJrftWPttm0FIL22xCu/e53WQ62oaYWR4WVsTj/f/HrlrBJ59rX3Sjq+/NN85Ttf
      qbgAfN5tq1uSWFlBzW+hFnTWUmkcdhcH2+uYXIjLYDhREbbVArR0H+H7P+zGYrWQzuRwVNmo
      qqpCzRdwOqpKVaMQO2bbneAqx82Bb37fB+Ny5OIXlaIM78wKsXskAMLUJADC1CQAwtQkAMLU
      JADC1CQAwtQkAMLUtvUgbGl6lHcuXyUQCnJjcYOQz0FzY4BQS5+sEikqwrZagLqWdpqbGrHm
      t2j0uFleXeTaVIz6Wp+MBRIVYVstwNz4EImMwcH9PYzPxrmv7TidnU3M3IjS29lcqhqF2DHb
      CsC+vuPs67v5/f79Pbd+/39/BCRE2ZNOsDA1CYAwNQmAMDUJgDA1CYAwNQmAMLWSzAukZtYZ
      n40TCngI1njZSBWoq5V7oaL8lSQAVy6eYXFN53JmDafLyzNPf60UuxVix5XkI5DNZiWbL2BV
      rIRrvUTXZJVyURlK0gL80b0PUdd+c5lUr8/DZjpbit0KseNKEgCbw01bi/vWzwGfnUwmg2EY
      VFdXo/zBtMmnnj2FmtudqfZqG25fqE/TNKxW622/u++R++js3b8r9ew7uO+2n3VdB8Bi+aAh
      fugrJ3dt8uDmjtvHa2mahsViue18HTl+hFA4tCf1GIaBruu3nbP7Hi3t+VIMwzAikQiZTKZk
      O31fJpPB6XTedoL3UiqV+sjsxXspl8uhKApVVeUxj1K5nS9N01BVFZfLtWPHsD7//PPPJ5NJ
      8vnSvyvbbDYURbntHeXTbK7M8+Y750hnNpmaitFQ72YlnsJqA4sC2VweBZ1cXkMxNPKagc16
      5yfLbrffcS3vW5u9yu/evszaxhZNdQE0rUD/lUFqAzXohoZWyDM/NcF0PPOZJwS2Wq1YrdY7
      rmnq8nn0mgbGr45SU+NDN0A3dAxNI5dTmZ8aJWtzYzN0QEfNF26egzus507P16WL71Ebqidf
      0EDX0NKrnBuO0hjykVPzWCwGal5D1/LkNR0wUNNJLvYPMr0wT3N9HZoO1v/n3CmKcqumT3Lj
      6nukq1vx2DWyORXF0FELGjablZW5YUajeUI+J2q+gGLo5PKFmzXrMHStf2enR/+sF9tY/xWO
      nnwaV2aaH//0LaJLA+SWVOzNHfS2+/jJy+9yojPMct6g3Wcjla/m688+g+0OD/NZ6wHIbsRp
      PXyC+Pjb/Os//RZLqA2LlqD/nSFqWlzoFgPL2ibZpsMc623/TPv+rPUkonNcWkqSX0sxMTmM
      zdikEOjFmRjj6vgyLS0hDPcIzlyGhGbHa7Hwte99F+8dnuU7qUfNZVlcXMCpFPjFu0Pc11JH
      fTjAS68M4szczSsXprjrQDNrW1nSawm8Ph/hOj+ZRIzIqkpNQw2jZ19DDR7kh3/+3Lbr2YzN
      Y2uG4atvMBBJYLOkWaeWH3z3GUbG59jIR5m59CrLuoMWl4XlTJ78yg302h4abbPltT7Avt5u
      3nvrVUK1bnr6jmEzpsgaQdYLWZaiKVobG/H4qrmxtI7HE6CQd9/xu1ux7E4PE1fO0hCqZ3+3
      BX9rJ4nFERwtbSj6CllrFR53kFS1c4crgWpfLQ/fe5LIxQtsrMew+TpYXZzFFgjT2aHgDYbQ
      7XYyCQtN9TW0+VwYJV6Ya27iKqmCi+VYjI7GRqq9dnKawtEjXagEaKp1Uu12k9EtBNtqqA3Y
      qSYH9X1sjs3g9/lpOHAYd7irJPU4PH4un32TjoAda1UVnW3NjMzE0PNb5BU73iqFNU8dPXVB
      bKk15tZX2d/Ti7ehC3VN3dk+wE6Yvj5AUvdw7HBp/gOFWRhERq+yVqjmWN+BW2+cFRcAIUqp
      PLr7QuwRCYAwNQmAMDUJgDA1CYAwtf8F83Sa2Ks5zIIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Sales Per Year' width='192'>
      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
      aCytcmZpnj8B4zcmKTvksBkAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
